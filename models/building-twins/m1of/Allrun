r#!/bin/bash
cd "${0%/*}" || exit                                # Run from this directory
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions        # Tutorial run functions
#------------------------------------------------------------------------------

restore0Dir

#runApplication blockMesh

#add in gmsh meshing
# gmsh -3 -optimize_netgen cylinder.geo -o cylinder.msh -format msh2
runApplication gmshToFoam ./gmsh/g1_refined.msh

# need to specify patches as empty (Contrib modifyPatches https://openfoamwiki.net/index.php/Contrib_modifyPatches). seems like the best way to do this is to fetch the utility from the github repo and compile it in the openfoam-docker shell script (modifyPatches works up til OF v2206).
# probably easier to just go into the file and change the text using sed, stream editor, to change the type of the patches to empty.
sed -i 's/type[[:space:]]*patch/type            wall/g' constant/polyMesh/boundary

sed -i '/back/,/}/ s/type[[:space:]]*wall/type            empty/' constant/polyMesh/boundary                                                                 
sed -i '/front/,/}/ s/type[[:space:]]*wall/type            empty/' constant/polyMesh/boundary


runApplication checkMesh
#runApplication setFields

runApplication $(getApplication)

# Flag to check if -vtk is present
vtk_flag=0

# Check each argument
for arg in "$@"; do
    if [[ "$arg" == "-vtk" ]]; then
        vtk_flag=1
        break
    fi
done

if [[ $vtk_flag -eq 1 ]]; then
    echo "-vtk argument detected"
    runApplication foamToVTK -fields '(U p T)'
    current_time=$(date "+%m-%d-%Y_%H.%M.%S")
    mv VTK "VTK_$current_time"
fi
